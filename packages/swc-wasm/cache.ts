/**
 * Simple script fetching/caching the wasm source of `@swc/wasm-web`. This script, for a given version of `swc`, will outut the wasm source and a `mod.ts` that initialize the wasm module and re-exports the `swc` api.
 */

const version = '1.2.172';
const wasmFile = 'swc.wasm';

const swcWasmWeb = await fetch(
    `https://cdn.esm.sh/@swc/wasm-web@${version}/wasm-web_bg.wasm`,
);

const buffer = await swcWasmWeb.arrayBuffer();

await Deno.writeFile(
    new URL(wasmFile, import.meta.url),
    new Uint8Array(buffer),
);

const source = `/**
 * Initializes \`swc\`'s wasm module and re-exports its api.
 */

// this file was generated by the \`./cache.ts\` module. Do not change it.

import initSwc from "https://esm.sh/@swc/wasm-web@${version}";

await initSwc(new URL('${wasmFile}', import.meta.url))

export * from "https://esm.sh/@swc/wasm-web@${version}";
export type {
    ExportAllDeclaration,
    ExportNamedDeclaration,
    ImportDeclaration,
    Node,
} from 'https://esm.sh/@swc/core@${version}/types.d.ts';    
`;

await Deno.writeTextFile(new URL('mod.ts', import.meta.url), source);
